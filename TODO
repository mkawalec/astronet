Rzeczy do zrobienia, by było dobrze:
1.  Dodać wrzucanie obrazków do postów
2.  Poprawić panel administracyjny i ustawienia konta ([Daniel]co dokładnie? ) 
3.  Zmigrować na WTFforms ([Daniel] nie mogę nigdzie znaleźć dlaczego to jest fajne)
4.  Zobaczyć jak ten nowy kod się sprawuje
5.  Zrobić zgłaszanie błędów w artykule. Przyda się tak czy inaczej,
    a przy przerzucaniu bazy pewnie będą jakieś błędy, więc ludzie 
    mogę klikać jak coś będzie nie tak ze starymi artykułami.
    Panel raportów, zarządzanie raportami (sortowanie, usuwanie, odklikiwanie nieaktualnych,
    przechodzenie do edycji artykułów)
    * redaktorzy dostają punkty za poprawienie błędu?
6.  Zgłaszanie flame'u w komentarzach?
7.  Dokumentacja funkcji (może być na końcu, bo będą pewnie przerabiane)
8.  Ujednolicić czy mają być adresy definiowane jako /home czy /home/
9.  Nowa Struktura - Fotogaleria (lista zdjęć z podpisami zdjęć i podpisami slajdów)
10. data ważności artykułu (np. data końca perseid, żeby przestał być wyświetlany w 
    kolumnie w kawałku dotyczącym wydazreń TERAZ typu zaćmienia, złączenia planet)
11. komentarze: po dodaniu komentarza trzeba odświeżyć stronę, żeby wyświetliło
    się polę do wpisania nowego; jeżeli usunięte komentarze nie są niczyimi
    rodzicami, to usunąć z bazy, a nie pisać, że usunięty
12. priorytetowość newsa: (na podstawie której będą kolejkowane newsy, tak
    aby nie wychodziło na raz 10, tylko co kilka godzin)
13. automatyczne rozwijanie skrotow: ESA, NASA... po najechaniu myszka albo
    wybranie jednego z kilku wieloznacznych skrotow


NOTE: Use #include clauses for coffeescript classes

- Make loader be embeddable in objects, not only work on the full page
- Add Mozilla Persona login
    - when a new person logs in with persona she has an entry
      corresponding to her email created in users table
- Validators on fields

- dodać ochronę przed CSRF, jak pokazane na
  http://flask.pocoo.org/snippets/3/ , używając gen_filename()
  albo (preferencyjnie?) na http://sjl.bitbucket.org/flask-csrf/

A co jeśli komć jest w bazie tym samym co wpis i można komcie przerabiać
na wpisy (upenić się, że nie akceptuje się arbitralnego htmla w
markdownie)

Rzeczy do zrobienia:
1. Dodać komcie. To zrobię ja (Michał), bo mam gdzieś w jakimś
wcześniejszym projekcie wyczesany kod komciów, który trzeba poprawić
trochę i będzie gicior.
2. Zarządzanie szkicami


- zrezygnowac z dodawania numerkow, albo wygenerowac rysunki, bo bot i
tak pobierze numerki ze zrodla strony i doda (nie wiem czy komus by sie
chcialo robic bota, ktory czyta obrazki)
 w razie czego link do klikniecia na mailu. inne pytanie czy chcemy
zeby kazdy mogl miec konto czy tylko redaktorzy. co jestesmy w stanie
zapewnic szaraczkom po zalogowaniu?
Michał: Można polubiać artykuły, komentować, patrzeć na odpowiedzi na
komcie. Szaraczek też może submitnąć artykuł, tylko potrzebuje
akceptacji redaktora taki artykuł, wtedy możemy zwiększyć participation
(nie trzeba pozwololenia, wystarczy po prostu napisać i submitnąć i ktoś
to zaakceptuje lub nie [albo jakaś inna zasada, na przykład przewaga 2
głosów za i min 4 głosy redektorów, czy cokolwiek])


 - Add logging:
   http://flask.pocoo.org/docs/errorhandling/


M: Zrobić walidowanie adresów email tak jak tutaj:
http://www.doughellmann.com/PyMOTW/smtplib/

